<?xml version="1.0" encoding="utf-8" ?>
<DutyDefs>

  <!-- Insertion hooks will be added for most things if people want it : testing stuff for now -->
  
  <!-- Setup carnival buildings -->
  <DutyDef>
    <defName>Duty_BuildCarnival</defName>
	<thinkNode Class="ThinkNode_Priority">
	  <subNodes>
	  
	    <li Class="JobGiver_FightFiresNearPoint">
		  <maxDistFromPoint>45</maxDistFromPoint>
		</li>
		
		<li Class="ThinkNode_Subtree">
          <treeDef>SatisfyBasicNeedsAndWork</treeDef>
        </li>
		
		<li Class="Carnivale.JobGiver_HaulToCarrierOrTrash" />
		
		<li Class="JobGiver_WanderNearDutyLocation">
          <wanderRadius>12</wanderRadius>
        </li>
		
	  </subNodes>
	</thinkNode>
  </DutyDef>
  
  
  <!-- Strike carnival buildings -->
  <DutyDef>
    <defName>Duty_StrikeBuildings</defName>
	<thinkNode Class="ThinkNode_Priority">
	  <subNodes>
	    
		<li Class="JobGiver_FightFiresNearPoint">
		  <maxDistFromPoint>45</maxDistFromPoint>
		</li>
		
		<!-- satisfy the basic needs, no sleep -->
		<li Class="ThinkNode_PrioritySorter">
		  <subNodes>
		    <li Class="JobGiver_GetFood" />
		    <li Class="JobGiver_SatisfyChemicalNeed" />
		  </subNodes>
		</li>
		
	    <!-- Strike buildings -->
	    <li Class="Carnivale.JobGiver_StrikeBuildings" />
		
		<!-- Haul dropped buildings to carriers -->
		<li Class="Carnivale.JobGiver_HaulToCarrierOrTrash" />
		
	  </subNodes>
	</thinkNode>
  </DutyDef>
  
  
  <!-- Goto hitch position and stay -->
  <DutyDef>
    <defName>Duty_HitchToSpot</defName>
	<thinkNode Class="ThinkNode_Priority">
	  <subNodes>
	    
		<li Class="ThinkNode_Subtree">
		  <treeDef>SatisfyBasicNeeds</treeDef>
	    </li>
		
	    <li Class="Carnivale.JobGiver_StandAtLoc" />
		
	  </subNodes>
	</thinkNode>
  </DutyDef>
  
  
  <!-- Goto and stand, do not satisfy needs -->
  <DutyDef>
    <defName>Duty_StandAtLoc</defName>
	<thinkNode Class="ThinkNode_Priority">
	  <subNodes>
	    <li Class="Carnivale.JobGiver_StandAtLoc" />
	  </subNodes>
	</thinkNode>
  </DutyDef>
  
  <!-- Meander -->
  <DutyDef>
    <defName>Duty_Meander</defName>
	<thinkNode Class="ThinkNode_Priority">
	  <subNodes>
	  
	    <li Class="JobGiver_FightFiresNearPoint">
		  <maxDistFromPoint>45</maxDistFromPoint>
		</li>
	    
		<!-- satisfy needs -->
		<li Class="ThinkNode_Subtree">
		  <treeDef>SatisfyBasicNeeds</treeDef>
		</li>
		
		<!-- Get joy -->
		<li Class="ThinkNode_ConditionalNeedPercentageAbove">
		  <need>Joy</need>
		  <threshold>0.5</threshold>
		  <invert>true</invert>
		  <subNodes>
		  
		    <li Class="ThinkNode_ForbidOutsideFlagRadius">
			  <maxDistToSquadFlag>30</maxDistToSquadFlag>
			  <subNodes>
			    <li Class="JobGiver_GetJoyInBed" />
			    <li Class="JobGiver_GetJoy" />
			  </subNodes>
			</li>
			
		  </subNodes>
		</li>
		
		<!-- Socialise a lil bit -->
		<li Class="ThinkNode_ConditionalRandom">
          <chance>0.25</chance>
          <subNodes>
            <li Class="JobGiver_StandAndBeSociallyActive">
              <ticksRange>
                <min>300</min>
                <max>450</max>
              </ticksRange>
            </li>
          </subNodes>
        </li>
		
		<!-- but mostly wander round -->
		<li Class="JobGiver_WanderNearDutyLocation">
		  <wanderRadius>12</wanderRadius>
		</li>
		
	  </subNodes>
	</thinkNode>
  </DutyDef>
  
  
  <!-- Meander and work -->
  <DutyDef>
    <defName>Duty_MeanderAndHelp</defName>
	<thinkNode Class="ThinkNode_Priority">
	  <subNodes>
	  
	    <li Class="JobGiver_FightFiresNearPoint">
		  <maxDistFromPoint>45</maxDistFromPoint>
		</li>
	    
		<!-- satisfy needs or do work -->
		<li Class="ThinkNode_Subtree">
		  <treeDef>SatisfyBasicNeedsAndWork</treeDef>
		</li>
		
		<!-- specialised hauling job giver -->
		<li Class="Carnivale.JobGiver_HaulToCarrierOrTrash" />
		
		<!-- Get joy -->
		<li Class="ThinkNode_ConditionalNeedPercentageAbove">
		  <need>Joy</need>
		  <threshold>0.5</threshold>
		  <invert>true</invert>
		  <subNodes>
		  
		    <li Class="ThinkNode_ForbidOutsideFlagRadius">
			  <maxDistToSquadFlag>30</maxDistToSquadFlag>
			  <subNodes>
			    <li Class="JobGiver_GetJoyInBed" />
			    <li Class="JobGiver_GetJoy" />
			  </subNodes>
			</li>
			
		  </subNodes>
		</li>
		
		<!-- Socialise a lil bit -->
		<li Class="ThinkNode_ConditionalRandom">
          <chance>0.25</chance>
          <subNodes>
            <li Class="JobGiver_StandAndBeSociallyActive">
              <ticksRange>
                <min>300</min>
                <max>450</max>
              </ticksRange>
            </li>
          </subNodes>
        </li>
		
		<!-- but mostly wander round -->
		<li Class="JobGiver_WanderNearDutyLocation">
		  <wanderRadius>12</wanderRadius>
		</li>
		
	  </subNodes>
	</thinkNode>
  </DutyDef>
  
  
  <!-- Charge nearest hostile -->
  <DutyDef>
    <defName>Duty_ChargeNearestHostile</defName>
    <alwaysShowWeapon>true</alwaysShowWeapon>
    <thinkNode Class="ThinkNode_Priority">
      <subNodes>
        <li Class="JobGiver_TakeCombatEnhancingDrug" />
        <li Class="JobGiver_AIFightEnemies">
          <targetAcquireRadius>65</targetAcquireRadius>
          <targetKeepRadius>72</targetKeepRadius>
        </li>
        <li Class="JobGiver_AIGotoNearestHostile" />
      </subNodes>
    </thinkNode>
  </DutyDef>
  
  
  <!-- Guard circuit -->
  <DutyDef>
    <defName>Duty_GuardCircuit</defName>
	<alwaysShowWeapon>true</alwaysShowWeapon>
	<thinkNode Class="ThinkNode_Priority">
	  <subNodes>
		
		<li Class="JobGiver_AIFightEnemies">
          <targetAcquireRadius>75</targetAcquireRadius>
          <targetKeepRadius>80</targetKeepRadius>
        </li>
		
		<!-- Goto next guard area -->
		<li Class="Carnivale.JobGiver_GotoNextGuardSpot" />
		
		<!-- satisfy the basic needs, no sleep -->
		<li Class="ThinkNode_PrioritySorter">
		  <subNodes>
		    <li Class="JobGiver_GetFood" />
		    <li Class="JobGiver_SatisfyChemicalNeed" />
		  </subNodes>
		</li>
		
		<!-- Get joy -->
		<li Class="ThinkNode_ConditionalNeedPercentageAbove">
		  <need>Joy</need>
		  <threshold>0.35</threshold>
		  <invert>true</invert>
		  <subNodes>
		    <li Class="JobGiver_GetJoy" />
		  </subNodes>
		</li>
	    
		<!-- TODO: feed animals -->
	    <li Class="Carnivale.ThinkNode_CanInteractWithAnimals">
	      
	    </li>
		
	  </subNodes>
	</thinkNode>
  </DutyDef>
  
  
  <!-- Defend carnival -->
  <DutyDef>
    <defName>Duty_DefendRanged</defName>
    <alwaysShowWeapon>true</alwaysShowWeapon>
    <thinkNode Class="ThinkNode_Priority">
      <subNodes>
	  
        <li Class="JobGiver_TakeCombatEnhancingDrug">
          <onlyIfInDanger>true</onlyIfInDanger>
        </li>
		
        <li Class="JobGiver_AIDefendPoint">
          <targetAcquireRadius>72</targetAcquireRadius>
          <targetKeepRadius>77</targetKeepRadius>
        </li>
		
        <li Class="JobGiver_WanderNearDutyLocation">
          <wanderRadius>8</wanderRadius>
        </li>
		
      </subNodes>
    </thinkNode>
  </DutyDef>
  
  
  <DutyDef>
    <defName>Duty_DefendMelee</defName>
    <alwaysShowWeapon>true</alwaysShowWeapon>
    <thinkNode Class="ThinkNode_Priority">
      <subNodes>
	  
        <li Class="JobGiver_TakeCombatEnhancingDrug">
          <onlyIfInDanger>true</onlyIfInDanger>
        </li>
		
        <li Class="JobGiver_AIDefendPoint">
          <targetAcquireRadius>65</targetAcquireRadius>
          <targetKeepRadius>67</targetKeepRadius>
        </li>
		
      </subNodes>
    </thinkNode>
  </DutyDef>
  
  
  <!-- Force rest -->
  <DutyDef>
    <defName>Duty_ForceRest</defName>
	<thinkNode Class="ThinkNode_Priority">
	  <subNodes>

		<!-- satisfy needs -->
		<li Class="ThinkNode_Subtree">
		  <treeDef>SatisfyBasicNeeds</treeDef>
		</li>
		
	  </subNodes>
	</thinkNode>
  </DutyDef>
  
  <!-- Exit map road or best, and defend self (really, this should be in vanilla) -->
  <DutyDef>
    <defName>Duty_DefendAndExitMapRoadOrBest</defName>
	<thinkNode Class="ThinkNode_Priority">
      <subNodes>
	    <!-- defend self -->
        <li Class="JobGiver_AIDefendSelf">
          <targetAcquireRadius>35</targetAcquireRadius>
          <targetKeepRadius>40</targetKeepRadius>
        </li>
		
		<!-- Custom exit map -->
        <li Class="Carnivale.JobGiver_ExitMapRoadOrBest">
          <defaultLocomotion>Walk</defaultLocomotion>
          <jobMaxDuration>200</jobMaxDuration>
        </li>
		
      </subNodes>
    </thinkNode>
  </DutyDef>
  
  
</DutyDefs>