<?xml version="1.0" encoding="utf-8" ?>
<DutyDefs>

  <!-- Insertion hooks will be added for most things if people want it : testing stuff for now -->
  
  <!-- Setup carnival buildings -->
  <DutyDef>
    <defName>Duty_BuildCarnival</defName>
	<thinkNode Class="ThinkNode_Priority">
	  <subNodes>
	  
	    <li Class="JobGiver_FightFiresNearPoint">
		  <maxDistFromPoint>25</maxDistFromPoint>
		</li>
		
		<li Class="ThinkNode_Subtree">
          <treeDef>SatisfyBasicNeedsAndWork</treeDef>
        </li>
		
		<li Class="Carnivale.JobGiver_HaulToCarrierOrTrash" />
		
		<li Class="JobGiver_WanderNearDutyLocation">
          <wanderRadius>12</wanderRadius>
        </li>
		
	  </subNodes>
	</thinkNode>
  </DutyDef>
  
  
  <!-- Goto hitch position and stay -->
  <DutyDef>
    <defName>Duty_HitchToSpot</defName>
	<thinkNode Class="ThinkNode_Priority">
	  <subNodes>
	    
		<li Class="ThinkNode_Subtree">
		  <treeDef>SatisfyBasicNeeds</treeDef>
	    </li>
		
	    <li Class="Carnivale.JobGiver_StandAtLoc" />
		
	  </subNodes>
	</thinkNode>
  </DutyDef>
  
  
  <!-- Meander -->
  <DutyDef>
    <defName>Duty_Meander</defName>
	<thinkNode Class="ThinkNode_Priority">
	  <subNodes>
	  
	    <li Class="JobGiver_FightFiresNearPoint">
		  <maxDistFromPoint>38</maxDistFromPoint>
		</li>
	    
		<!-- satisfy needs -->
		<li Class="ThinkNode_Subtree">
		  <treeDef>SatisfyBasicNeeds</treeDef>
		</li>
		
		<!-- Get joy -->
		<li Class="ThinkNode_ConditionalNeedPercentageAbove">
		  <need>Joy</need>
		  <threshold>0.5</threshold>
		  <invert>true</invert>
		  <subNodes>
		    <li Class="JobGiver_GetJoyInBed" />
			<li Class="JobGiver_GetJoy" />
		  </subNodes>
		</li>
		
		<!-- Socialise a lil bit -->
		<li Class="ThinkNode_ConditionalRandom">
          <chance>0.25</chance>
          <subNodes>
            <li Class="JobGiver_StandAndBeSociallyActive">
              <ticksRange>
                <min>300</min>
                <max>450</max>
              </ticksRange>
            </li>
          </subNodes>
        </li>
		
		<!-- but mostly wander round -->
		<li Class="JobGiver_WanderNearDutyLocation">
		  <wanderRadius>12</wanderRadius>
		</li>
		
	  </subNodes>
	</thinkNode>
  </DutyDef>
  
  
  <!-- Meander and work -->
  <DutyDef>
    <defName>Duty_MeanderAndHelp</defName>
	<thinkNode Class="ThinkNode_Priority">
	  <subNodes>
	  
	    <li Class="JobGiver_FightFiresNearPoint">
		  <maxDistFromPoint>38</maxDistFromPoint>
		</li>
	    
		<!-- satisfy needs or do work -->
		<li Class="ThinkNode_Subtree">
		  <treeDef>SatisfyBasicNeedsAndWork</treeDef>
		</li>
		
		<li Class="Carnivale.JobGiver_HaulToCarrierOrTrash" />
		
		<!-- Get joy -->
		<li Class="ThinkNode_ConditionalNeedPercentageAbove">
		  <need>Joy</need>
		  <threshold>0.5</threshold>
		  <invert>true</invert>
		  <subNodes>
		    <li Class="JobGiver_GetJoyInBed" />
			<li Class="JobGiver_GetJoy" />
		  </subNodes>
		</li>
		
		<!-- Socialise a lil bit -->
		<li Class="ThinkNode_ConditionalRandom">
          <chance>0.25</chance>
          <subNodes>
            <li Class="JobGiver_StandAndBeSociallyActive">
              <ticksRange>
                <min>300</min>
                <max>450</max>
              </ticksRange>
            </li>
          </subNodes>
        </li>
		
		<!-- but mostly wander round -->
		<li Class="JobGiver_WanderNearDutyLocation">
		  <wanderRadius>12</wanderRadius>
		</li>
		
	  </subNodes>
	</thinkNode>
  </DutyDef>
  
  
  <!-- Guard small area -->
  <DutyDef>
    <defName>Duty_GuardSmallArea</defName>
	<alwaysShowWeapon>true</alwaysShowWeapon>
	<thinkNode Class="ThinkNode_Priority">
	  <subNodes>
	    
		<li Class="JobGiver_FightFiresNearPoint">
		  <maxDistFromPoint>8</maxDistFromPoint>
		</li>
	    
		<!-- satisfy needs -->
		<li Class="ThinkNode_Subtree">
		  <treeDef>SatisfyBasicNeeds</treeDef>
		</li>
		
		<!-- guard area -->
	    <li Class="JobGiver_WanderNearDutyLocation">
	      <wanderRadius>4</wanderRadius>
	    </li>
	    
		<!-- TODO: feed animals -->
	    <li Class="Carnivale.ThinkNode_CanInteractWithAnimals">
	      
	    </li>
		
	  </subNodes>
	</thinkNode>
	
  </DutyDef>
  
  
  <!-- Rest -->
  <DutyDef>
    <defName>Duty_ForceRest</defName>
	<alwaysShowWeapon>false</alwaysShowWeapon>
	<thinkNode Class="ThinkNode_Priority">
	  <subNodes>
		
		<!-- Goto carnival area if not already -->
		<!-- <li Class="Carnivale.ThinkNode_InCarnivalArea"> -->
		  <!-- <invert>true</invert> -->
		  <!-- <subNodes> -->
		    <!-- <li Class="Carnivale.JobGiver_GotoCarnivalArea" /> -->
		  <!-- </subNodes> -->
		<!-- </li> -->
		
		<li Class="ThinkNode_Subtree">
		  <treeDef>SatisfyBasicNeeds</treeDef>
		</li>
		
		<!-- Force get rest -->
		<!-- <li Class="Carnivale.JobGiver_ForceGetRest" /> -->
		
	  </subNodes>
	</thinkNode>
  </DutyDef>
  
  
</DutyDefs>